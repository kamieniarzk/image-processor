<resources>
    <string name="app_name">Image processor</string>
    <string name="algorithm_config">Algorithm configuration</string>
    <string name="camera_on_button">Start camera</string>
    <string name="flip_camera_button">Flip camera</string>
    <string name="threshold1">Threshold 1</string>
    <string name="threshold2">Threshold 2</string>
    <string name="blurKernelSize">Blur kernel size</string>
    <string name="reset_features_button">Reset features to track</string>
    <string name="gallery_button">Media gallery</string>
    <string name="title">Title</string>
    <string name="length">"00:00:00</string>
    <string name="thumbnail">Video thumbnail</string>
    <string name="filtering_paragraph">2D convolution is performed on the image with chosen filter and specified kernel size in order to remove noises.</string>
    <string name="filter_method">Choose filter: </string>
    <string name="filter_size">Choose filter size</string>
    <string name="averaging">This is done by convolving image with a normalized box filter. It simply takes the average of all the pixels under kernel area and replace the central element.</string>
    <string name="gaussian">This is done by convolving image with a Gaussian filter. The standard deviation of the kernel is 0 in both axes.</string>
    <string name="median">In this case, the function takes median of all the pixels under kernel area and central element is replaced with this median value.</string>
    <string name="thresholding_description">Image thresholding - in this stage of processing, a binary mask is created from the input, after applying thresholding on a given range.</string>
    <string name="color_space_hint">The input can be either processed in color or transformed to grayscale.</string>
    <string name="color_space_label">Color space</string>
    <string name="pick_size">Specify kernel size</string>
    <string name="threshold_radius">Specify the radius of pixel values to look for</string>
    <string name="hue">Hue</string>
    <string name="saturation">Saturation</string>
    <string name="hsvValue">Value</string>
    <string name="radius">Radius</string>
    <string name="color">Color</string>
    <string name="gray">Grayscale</string>
    <string name="edge_detection">Edge detection</string>
    <string name="thresholding">Thresholding</string>
    <string name="segmentation">In this stage of processing, a binary mask is created from the input frame after applying a segmentation method.</string>
    <string name="specify_segmentation">Specify segmentation method:</string>
    <string name="sobel">Sobel\'s method</string>
    <string name="canny">Canny\'s method</string>
    <string name="filter_mode">Filter mode</string>
    <string name="kernel_size">Kernel size</string>
    <string name="lorem">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc velit massa, commodo at libero eget, sollicitudin tincidunt nunc. Aliquam vel elementum libero. Nulla ullamcorper fermentum justo, nec tempor diam iaculis nec. Aenean tincidunt lobortis mauris. Integer at felis eu nisi facilisis dictum sit amet ac lectus. Donec dapibus quis magna non lacinia. In hac habitasse platea dictumst. Aenean lacinia sodales dui, eu auctor urna dapibus nec. Duis auctor aliquam rhoncus.</string>
    <string name="welcome_text">Image processor application is a result of a Bachelor\'s thesis. The main capability of the application is processing of image frames from the device\'s camera using a user-defined processing sequence. The processing happens in real-time and the result image stream can be saved in the media gallery.</string>
    <string name="color_space">Color space</string>
    <string name="seg_label">Segmentation</string>
    <string name="smoothing_label">Smoothing</string>
    <string name="marking">In this stage of processing, the features extracted in the segmentation step are marked on the image.</string>
    <string name="substitute_colors_desc">The color of the extracted features is substituted to a chosen value</string>
    <string name="draw_contours_and_label_desc">Blobs that have area greater than the specified min value have a contour drawn around them and a label with the % of the whole image area they take up.</string>
    <string name="marking_label">Marking</string>
    <string name="edge_detection_desc">This segmentation method yields a binary mask by applying a selected edge detection algorithm on the image.</string>
    <string name="substitute_color">Substitute color</string>
    <string name="draw_contours">Draw contours and label</string>
    <string name="contour_thickness">Contour thickness</string>
    <string name="minimal_contour_area">Minimal contour area</string>
    <string name="contour_line_preview">Contour line preview</string>
    <string name="color_preview">Color preview</string>
    <string name="configuration_details">Configuration details</string>
    <string name="segmentation_method">Segmentation method:</string>
    <string name="filtering_method">Filtering method:</string>
    <string name="extraction_method">Extraction method:</string>
    <string name="recording_details">Recording details</string>
    <string name="threshold_1">Threshold 1</string>
    <string name="threshold_2">Threshold 2</string>
    <string name="both_edge_dir">Both</string>
    <string name="vertical_edge_dir">Vertical</string>
    <string name="horizontal_edge_dir">Horizontal</string>
    <string name="edge_dir_hint">Specify the direction of edges to detect</string>
    <string name="edge_direction">Edge direction</string>
</resources>